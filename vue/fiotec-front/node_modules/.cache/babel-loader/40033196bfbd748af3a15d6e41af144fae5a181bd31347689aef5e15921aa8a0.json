{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, resolveDynamicComponent as _resolveDynamicComponent, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RouterView = _resolveComponent(\"RouterView\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  return $options.layout.showLayout !== '' ? (_openBlock(), _createBlock(_resolveDynamicComponent($options.layout.showLayout), {\n    key: 0\n  }, {\n    default: _withCtx(() => [_createVNode(_component_RouterView), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.snackBar.showSnackBar.filter(s => s.showing), (snackbar, index) => {\n      return _openBlock(), _createBlock(_component_v_snackbar, {\n        key: snackbar.msg + Math.random(),\n        modelValue: snackbar.show,\n        \"onUpdate:modelValue\": $event => snackbar.show = $event,\n        \"multi-line\": \"\"\n      }, {\n        actions: _withCtx(() => [_createVNode(_component_v_btn, {\n          color: \"red\",\n          variant: \"text\",\n          onClick: _cache[0] || (_cache[0] = $event => $options.snackBar.increment = {\n            status: false,\n            msg: ''\n          })\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" Close \")]),\n          _: 1 /* STABLE */\n        })]),\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.snackBar.msgSnackBar) + \" \", 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$options","layout","showLayout","_createBlock","_resolveDynamicComponent","key","default","_withCtx","_createVNode","_component_RouterView","_createElementBlock","_Fragment","_renderList","snackBar","showSnackBar","filter","s","showing","snackbar","index","_component_v_snackbar","msg","Math","random","modelValue","show","$event","actions","_component_v_btn","color","variant","onClick","_cache","increment","status","_createTextVNode","_","_toDisplayString","msgSnackBar","_createCommentVNode"],"sources":["/app/src/App.vue"],"sourcesContent":["<template>\n  <component :is=\"layout.showLayout\" v-if=\"layout.showLayout !== ''\">\n    <RouterView  />\n    <v-snackbar\n      v-for=\"(snackbar, index) in snackBar.showSnackBar.filter(s => s.showing)\"\n      :key=\"snackbar.msg + Math.random()\"\n      v-model=\"snackbar.show\"\n      multi-line\n    >\n      {{ snackBar.msgSnackBar }}\n\n      <template v-slot:actions>\n        <v-btn\n          color=\"red\"\n          variant=\"text\"\n          @click=\"snackBar.increment = { status: false, msg: ''}\"\n        >\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </component>\n</template>\n\n<script>\nimport DefaultLayout from '@/layouts/Default-layout.vue'\nimport AuthLayout from '@/layouts/Auth-layout.vue'\nimport { useLayoutStore } from '@/stores/layout.js'\nimport { useSnackBar } from '@/stores/snackBar.js'\nimport axios from '@/api/axios'\nexport default {\n  name: 'App',\n  components: {\n    DefaultLayout,\n    AuthLayout\n  },\n  data: () => ({\n    textSnackBar: ''\n  }),\n\n  computed: {\n    layout() {\n      return useLayoutStore()\n    },\n    snackBar () {\n      return useSnackBar()\n    }\n  },\n  async created () {\n    this.setupAxiosToken()\n  },\n  methods: {\n    setupAxiosToken () {\n      if (localStorage.getItem('token')) {\n        axios.defaults.headers.common.Authorization = `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;;;;SAC2CA,QAAA,CAAAC,MAAM,CAACC,UAAU,W,cAA1DC,YAAA,CAoBYC,wBArBd,CACkBJ,QAAA,CAAAC,MAAM,CAACC,UAAU;IADnCG,GAAA;EAAA;IAAAC,OAAA,EAAAC,QAAA,CAEI,MAAe,CAAfC,YAAA,CAAeC,qBAAA,I,kBACfC,mBAAA,CAiBaC,SAAA,QApBjBC,WAAA,CAIkCZ,QAAA,CAAAa,QAAQ,CAACC,YAAY,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,GAJ7E,CAIcC,QAAQ,EAAEC,KAAK;2BADzBhB,YAAA,CAiBaiB,qBAAA;QAfVf,GAAG,EAAEa,QAAQ,CAACG,GAAG,GAAGC,IAAI,CAACC,MAAM;QALtCC,UAAA,EAMeN,QAAQ,CAACO,IAAI;QAN5B,uBAAAC,MAAA,IAMeR,QAAQ,CAACO,IAAI,GAAAC,MAAA;QACtB,YAAU,EAAV;;QAIiBC,OAAO,EAAApB,QAAA,CACtB,MAMQ,CANRC,YAAA,CAMQoB,gBAAA;UALNC,KAAK,EAAC,KAAK;UACXC,OAAO,EAAC,MAAM;UACbC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAE1B,QAAA,CAAAa,QAAQ,CAACoB,SAAS;YAAAC,MAAA;YAAAb,GAAA;UAAA;;UAfpCf,OAAA,EAAAC,QAAA,CAgBS,MAED,CAlBR4B,gBAAA,CAgBS,SAED,E;UAlBRC,CAAA;;QAAA9B,OAAA,EAAAC,QAAA,CASM,MAA0B,CAThC4B,gBAAA,CAAAE,gBAAA,CASSrC,QAAA,CAAAa,QAAQ,CAACyB,WAAW,IAAG,GAE1B,gB;QAXNF,CAAA;;;IAAAA,CAAA;QAAAG,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}