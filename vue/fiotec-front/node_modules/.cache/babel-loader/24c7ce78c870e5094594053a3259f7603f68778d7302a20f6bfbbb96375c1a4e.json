{"ast":null,"code":"import api from '@/api/api';\nimport { useSnackBar } from '@/stores/snackBar.js';\nexport default {\n  name: 'EditSubject',\n  props: {\n    subjectId: {\n      type: Number,\n      default: null\n    },\n    subjectName: {\n      type: String,\n      default: ''\n    },\n    dialogEditSubject: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    loading: false,\n    dialog: false,\n    name: ''\n  }),\n  computed: {\n    snackBar() {\n      return useSnackBar();\n    }\n  },\n  watch: {\n    subjectName() {\n      this.name = this.subjectName;\n    }\n  },\n  created() {\n    this.name = this.subjectName;\n  },\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n    async update() {\n      this.loading = true;\n      const data = {\n        name: this.name\n      };\n      try {\n        await api.updateSubject(this.subjectId, data);\n        this.$emit('reload');\n        this.snackBar.increment({\n          show: true,\n          msg: 'Matéria atualizada com sucesso',\n          color: 'success'\n        });\n        this.loading = false;\n        this.$emit('close');\n      } catch (e) {\n        this.loading = false;\n        const feedback = e?.response?.data?.message ?? 'Ocorreu um erro, tente novamente mais tarde';\n        this.snackBar.increment({\n          show: true,\n          msg: feedback,\n          color: 'warning'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","useSnackBar","name","props","subjectId","type","Number","default","subjectName","String","dialogEditSubject","Boolean","data","loading","dialog","computed","snackBar","watch","created","methods","close","$emit","update","updateSubject","increment","show","msg","color","e","feedback","response","message"],"sources":["/app/src/components/subjects/EditSubject.vue"],"sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialogEditSubject\"\n    max-width=\"400\"\n    persistent\n  >\n    <v-card\n      prepend-icon=\"mdi-account-school\"\n      title=\"Editar Matéria\"\n    >\n      <template v-slot:text>\n        <v-progress-linear\n          v-if=\"loading\"\n          color=\"#008ABD\"\n          indeterminate\n        />\n        <v-text-field\n          v-model=\"name\"\n          label=\"Nome\"\n          variant=\"underlined\"\n          :disabled=\"loading\"\n        />\n      </template>\n      <template v-slot:actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          :disabled=\"loading\"\n          @click=\"close\"\n        >\n          Cancela\n        </v-btn>\n        <v-btn\n          :disabled=\"loading\"  \n          @click=\"update\"\n        >\n          Atualizar\n        </v-btn>\n      </template>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport api from '@/api/api';\nimport { useSnackBar } from '@/stores/snackBar.js'\n\n  export default {\n    name: 'EditSubject',\n\n    props: {\n      subjectId: {\n        type: Number,\n        default: null\n      },\n      subjectName: {\n        type: String,\n        default: ''\n      },\n      dialogEditSubject: {\n        type: Boolean,\n        default: false\n      }\n    },\n  data: () => ({\n    loading: false,\n    dialog: false,\n    name: ''\n  }),\n  computed: {\n    snackBar() {\n      return useSnackBar()\n    }\n  },\n  watch: {\n    subjectName () {\n      this.name = this.subjectName\n    }\n  },\n  created () {\n    this.name = this.subjectName\n  },\n\n  methods: {\n    close () {\n      this.$emit('close')\n    },\n    async update () {\n      this.loading = true\n      const data = {\n        name: this.name\n      }\n      try {\n        await api.updateSubject(this.subjectId, data)\n        this.$emit('reload')\n        this.snackBar.increment({show: true, msg: 'Matéria atualizada com sucesso', color: 'success'} )\n        this.loading = false\n        this.$emit('close')\n      } catch (e) {\n        this.loading = false\n        const feedback = e?.response?.data?.message ?? 'Ocorreu um erro, tente novamente mais tarde'\n        this.snackBar.increment({show: true, msg: feedback, color: 'warning'} )\n      }\n    }\n  }\n}\n</script>"],"mappings":"AA0CA,OAAOA,GAAE,MAAO,WAAW;AAC3B,SAASC,WAAU,QAAS,sBAAqB;AAE/C,eAAe;EACbC,IAAI,EAAE,aAAa;EAEnBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE;MACXH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX,CAAC;IACDG,iBAAiB,EAAE;MACjBL,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX;EACF,CAAC;EACHK,IAAI,EAAEA,CAAA,MAAO;IACXC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE,KAAK;IACbZ,IAAI,EAAE;EACR,CAAC,CAAC;EACFa,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAOf,WAAW,CAAC;IACrB;EACF,CAAC;EACDgB,KAAK,EAAE;IACLT,WAAUA,CAAA,EAAK;MACb,IAAI,CAACN,IAAG,GAAI,IAAI,CAACM,WAAU;IAC7B;EACF,CAAC;EACDU,OAAMA,CAAA,EAAK;IACT,IAAI,CAAChB,IAAG,GAAI,IAAI,CAACM,WAAU;EAC7B,CAAC;EAEDW,OAAO,EAAE;IACPC,KAAIA,CAAA,EAAK;MACP,IAAI,CAACC,KAAK,CAAC,OAAO;IACpB,CAAC;IACD,MAAMC,MAAKA,CAAA,EAAK;MACd,IAAI,CAACT,OAAM,GAAI,IAAG;MAClB,MAAMD,IAAG,GAAI;QACXV,IAAI,EAAE,IAAI,CAACA;MACb;MACA,IAAI;QACF,MAAMF,GAAG,CAACuB,aAAa,CAAC,IAAI,CAACnB,SAAS,EAAEQ,IAAI;QAC5C,IAAI,CAACS,KAAK,CAAC,QAAQ;QACnB,IAAI,CAACL,QAAQ,CAACQ,SAAS,CAAC;UAACC,IAAI,EAAE,IAAI;UAAEC,GAAG,EAAE,gCAAgC;UAAEC,KAAK,EAAE;QAAS,CAAE;QAC9F,IAAI,CAACd,OAAM,GAAI,KAAI;QACnB,IAAI,CAACQ,KAAK,CAAC,OAAO;MACpB,EAAE,OAAOO,CAAC,EAAE;QACV,IAAI,CAACf,OAAM,GAAI,KAAI;QACnB,MAAMgB,QAAO,GAAID,CAAC,EAAEE,QAAQ,EAAElB,IAAI,EAAEmB,OAAM,IAAK,6CAA4C;QAC3F,IAAI,CAACf,QAAQ,CAACQ,SAAS,CAAC;UAACC,IAAI,EAAE,IAAI;UAAEC,GAAG,EAAEG,QAAQ;UAAEF,KAAK,EAAE;QAAS,CAAE;MACxE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}